Задание 1
Импортируйте библиотеку Numpy и дайте ей псевдоним np.
1. Создать одномерный массив Numpy под названием a из 12 последовательных целых чисел чисел от 12 до 24 невключительно
2. Создать 5 двумерных массивов разной формы из массива a. Не использовать в аргументах метода reshape число -1.
3. Создать 5 двумерных массивов разной формы из массива a. Использовать в аргументах метода reshape число -1 (в трех примерах - для обозначения числа столбцов, в двух - для строк).
4. Можно ли массив Numpy, состоящий из одного столбца и 12 строк, назвать одномерным?
5. Создать массив из 3 строк и 4 столбцов, состоящий из случайных чисел с плавающей запятой из нормального распределения 
со средним, равным 0 и среднеквадратичным отклонением, равным 1.0. Получить из этого массива одномерный массив с таким же атрибутом size, как и исходный массив.
6. Создать массив a, состоящий из целых чисел, убывающих от 20 до 0 невключительно с интервалом 2.
Создать массив b, состоящий из 1 строки и 10 столбцов: целых чисел, убывающих от 20 до 1 невключительно с интервалом 2.
В чем разница между массивами a и b?
7. Вертикально соединить массивы a и b. a - двумерный массив из нулей, 
число строк которого больше 1 и на 1 меньше, чем число строк двумерного 
массива b, состоящего из единиц.
Итоговый массив v должен иметь атрибут size, равный 10.
8. Создать одномерный массив а, состоящий из последовательности целых чисел от 0 до 12.
Поменять форму этого массива, чтобы получилась матрица A (двумерный массив Numpy), состоящая из 
4 строк и 3 столбцов. Получить матрицу At путем транспонирования матрицы A.
Получить матрицу B, умножив матрицу A на матрицу At с помощью матричного умножения.
Какой размер имеет матрица B?
Получится ли вычислить обратную матрицу для матрицы B и почему?
9. Инициализируйте генератор случайных числе с помощью объекта seed, равного 42. 
Создайте одномерный массив c, составленный из последовательности 16-ти случайных целых чисел от 0 до 16 невключительно. 
Поменяйте его форму так, чтобы получилась квадратная матрица C.
Получите матрицу D, поэлементно прибавив матрицу B из предыдущего вопроса к матрице C, умноженной на 10.
Вычислите определитель, ранг и обратную матрицу D_inv для D.
10. Приравняйте к нулю отрицательные числа в матрице D_inv, а положительные - к единице.
Убедитесь, что в матрице D_inv остались только нули и единицы.
С помощью функции numpy.where, используя матрицу D_inv в качестве маски,
а матрицы B и C - в качестве источников данных,
получите матрицу E размером 4x4. 
Элементы матрицы E, для которых соответствующий элемент матрицы D_inv равен 1,
должны быть равны соответствующему элементу матрицы B,
а элементы матрицы E, для которых соответствующий элемент матрицы D_inv равен 0,
должны быть равны соответствующему элементу матрицы C.

Задание 2
Создайте массив Numpy под названием a размером 5x2, то есть состоящий из 5 строк и 2 столбцов.
Первый столбец должен содержать числа 1, 2, 3, 3, 1, а второй - числа 6, 8, 11, 10, 7.
Будем считать, что каждый столбец - это признак, а строка - наблюдение.
Затем найдите среднее значение по каждому признаку, используя метод mean массива Numpy.
Результат запишите в массив mean_a, в нем должно быть 2 элемента.

Задание 3
Вычислите массив a_centered, отняв от значений массива а 
средние значения соответствующих признаков, содержащиеся в массиве mean_a.
Вычисление должно производиться в одно действие.
Получившийся массив должен иметь размер 5x2.

Задание 4
Найдите скалярное произведение столбцов массива a_centered.
В результате должна получиться величина a_centered_sp. 
Затем поделите a_centered_sp на N-1, где N - число наблюдений.

* Задание 5
Число, которое мы получили в конце задания 4, является 
ковариацией двух признаков, содержащихся в массиве а.
В задании 4 мы делили сумму произведений центрированных 
признаков на N-1, а не на N, поэтому полученная нами величина 
является несмещенной оценкой ковариации.
Подробнее узнать о ковариации можно здесь:
Ссылка
В этом задании проверьте получившееся число, вычислив
ковариацию еще одним способом - с помощью функции np.cov.
В качестве аргумента m функция np.cov должна принимать транспонированный массив a.
В получившейся ковариационной матрице (массив Numpy размером 2x2) искомое значение 
ковариации будет равно элементу в строке с индексом 0 и столбце с индексом 1.